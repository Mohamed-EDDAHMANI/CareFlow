version: "3.9"

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: cliniqueservice-app:dev
    container_name: cliniqueService_app
    env_file:
      - ../.env
    environment:
      - NODE_ENV=development
      - PORT=3000
      - CHOKIDAR_USEPOLLING=true
      - MINIO_ENDPOINT=minio
    ports:
      - "3000:3000"
    volumes:
      - ../src:/app/src
      - ../package.json:/app/package.json
      - ../package-lock.json:/app/package-lock.json
    command: ["npm", "run", "dev"]
    depends_on:
      - mongo
      - redis
      - minio
    networks:
      - cliniqueService-net

  mongo:
    image: mongo:6.0
    logging:
      driver: "none"
    container_name: cliniqueService_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-cliniqueService}
    volumes:
      - mongo_data:/data/db
    networks:
      - cliniqueService-net
    ports:
      - "27017:27017"
    command: ["mongod", "--bind_ip_all"]

  redis:
    image: redis:7-alpine
    container_name: cliniqueService_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cliniqueService-net

  minio:
    image: minio/minio:latest
    container_name: cliniqueService_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-admin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-password}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - cliniqueService-net
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  mongo_data:
  redis_data:
  minio_data:

networks:
  cliniqueService-net:
    driver: bridge